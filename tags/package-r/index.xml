<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>package R | Jean-Pierre Rossi - Inrae</title>
    <link>/tags/package-r/</link>
      <atom:link href="/tags/package-r/index.xml" rel="self" type="application/rss+xml" />
    <description>package R</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020 J.-P. Rossi</copyright><lastBuildDate>Sat, 04 Apr 2020 21:13:14 -0500</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>package R</title>
      <link>/tags/package-r/</link>
    </image>
    
    <item>
      <title>(not that) basic operations on raster objects in R</title>
      <link>/2020/04/04/raster2/</link>
      <pubDate>Sat, 04 Apr 2020 21:13:14 -0500</pubDate>
      <guid>/2020/04/04/raster2/</guid>
      <description>


&lt;p&gt;This post is a sequel of &lt;a href=&#34;/2020/03/17/raster1/&#34;&gt;a first attempt at giving&lt;/a&gt; an overview of some very basic operations on raster objects in &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;change-the-coordinate-system-of-a-raster&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Change the coordinate system of a raster&lt;/h2&gt;
&lt;p&gt;To illustrate how we can change the coordinate system of a raster object we will work with a raster representing the world. Rather than loading a raster somewhere, we will create a raster from a spatial polygon. This will show you how this can be done using the &lt;code&gt;R&lt;/code&gt; packages &lt;code&gt;maps&lt;/code&gt;, &lt;code&gt;sp&lt;/code&gt; and &lt;code&gt;maptools&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;create-a-raster-object-from-an-object-of-class-map.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Create a raster object from an object of class &lt;code&gt;map&lt;/code&gt;.&lt;/h3&gt;
&lt;p&gt;We get a spatial polygon representing the world from the package &lt;code&gt;maps&lt;/code&gt;. The polygon will then be converted into a raster object.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(maps) ; library(maptools)
## Le chargement a nécessité le package : sp
## Checking rgeos availability: TRUE
poly &amp;lt;- map(&amp;quot;world&amp;quot;, fill=TRUE, col=&amp;quot;transparent&amp;quot;, plot=F)
class(poly)
## [1] &amp;quot;map&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The class of &lt;code&gt;poly&lt;/code&gt; is &lt;code&gt;map&lt;/code&gt;. We create a &lt;code&gt;SpatialPolygons&lt;/code&gt; object from &lt;code&gt;poly&lt;/code&gt; using the function &lt;code&gt;map2SpatialPolygons&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;IDs &amp;lt;- sapply(strsplit(poly$names, &amp;quot;:&amp;quot;), function(x) x[1])
poly_sp &amp;lt;- map2SpatialPolygons(poly, IDs=IDs, proj4string=CRS(&amp;quot;+proj=longlat +datum=WGS84&amp;quot;))
plot(poly_sp)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-05-Rlandscape02_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(poly_sp)
## [1] &amp;quot;SpatialPolygons&amp;quot;
## attr(,&amp;quot;package&amp;quot;)
## [1] &amp;quot;sp&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;convert-spatial-polygons-to-raster&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Convert spatial polygons to raster&lt;/h3&gt;
&lt;p&gt;This is easily done using the function &lt;code&gt;poly_to_raster&lt;/code&gt; from the &lt;code&gt;R&lt;/code&gt; package &lt;code&gt;poly_to_raster&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(raster)
library(tmaptools)
r &amp;lt;- poly_to_raster(shp=poly_sp)
plot(r)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-05-Rlandscape02_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(r)
## [1] &amp;quot;RasterLayer&amp;quot;
## attr(,&amp;quot;package&amp;quot;)
## [1] &amp;quot;raster&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;r&lt;/code&gt; is a nice raster where each country of the world has its own color.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;raster-projection-in-a-new-coordinate-system&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Raster projection in a new coordinate system&lt;/h3&gt;
&lt;p&gt;First of all, note that as far as coordinate system is concerned, the Holy Grail has been found and is available here: &lt;a href=&#34;https://www.spatialreference.org/&#34; class=&#34;uri&#34;&gt;https://www.spatialreference.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our raster object initial coordinate system is +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;projection(r)
## [1] &amp;quot;+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;raster reprojection is achived using the function &lt;code&gt;projectRaster&lt;/code&gt; for the package &lt;code&gt;raster&lt;/code&gt;. We explore below several projection systems.&lt;/p&gt;
&lt;p&gt;European-centric ETRS89 Lambert Azimuthal Equal-Area projection:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rp &amp;lt;- projectRaster(from=r, crs=&amp;quot;+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs&amp;quot;)
plot(rp)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-05-Rlandscape02_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Let’s try the WGS 84 / North Pole Lambert Azimuthal Equal Area (&lt;a href=&#34;https://www.spatialreference.org/ref/sr-org/7250/&#34; class=&#34;uri&#34;&gt;https://www.spatialreference.org/ref/sr-org/7250/&lt;/a&gt;):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rp &amp;lt;- projectRaster(from=r, crs=&amp;quot;+proj=laea +lat_0=90 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs&amp;quot;)
plot(rp)  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-05-Rlandscape02_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now the SR-ORG:8796 aka saber (&lt;a href=&#34;https://www.spatialreference.org/ref/sr-org/8796/&#34; class=&#34;uri&#34;&gt;https://www.spatialreference.org/ref/sr-org/8796/&lt;/a&gt;):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rp &amp;lt;- projectRaster(from=r, crs=&amp;quot;+proj=laea +lat_0=0 +lon_0=20 +x_0=0 +y_0=0 +ellps=WGS84 +units=m +no_defs&amp;quot;)
plot(rp) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-05-Rlandscape02_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The SR-ORG:8511 (&lt;a href=&#34;https://www.spatialreference.org/ref/sr-org/8511/&#34; class=&#34;uri&#34;&gt;https://www.spatialreference.org/ref/sr-org/8511/&lt;/a&gt;) is also pretty nice:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rp &amp;lt;- projectRaster(from=r, crs=&amp;quot;+proj=robin +lon_0=00 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs&amp;quot;)
plot(rp) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-05-Rlandscape02_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can change the center of the map:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Change centre
rp &amp;lt;- projectRaster(from=r, crs=&amp;quot;+proj=robin +lon_0=+160 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs &amp;quot;)
plot(rp) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-05-Rlandscape02_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;That’s it. Visit &lt;a href=&#34;https://www.spatialreference.org/&#34; class=&#34;uri&#34;&gt;https://www.spatialreference.org/&lt;/a&gt; and try more projections!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Basic operations on raster objects in R</title>
      <link>/2020/03/17/raster1/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/2020/03/17/raster1/</guid>
      <description>


&lt;p&gt;In this post I will go through some basic operations on raster objects using the famous &lt;code&gt;raster&lt;/code&gt; package developped by Robert Hijmans.&lt;/p&gt;
&lt;p&gt;First we need a raster and it seemed interesting to simulate a raster rather than using a pre existing example. For that purpose, we’re using the &lt;code&gt;R&lt;/code&gt; package &lt;code&gt;landscapeR&lt;/code&gt; developped by Dario Masante.&lt;/p&gt;
&lt;div id=&#34;creating-an-example-raster-object&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Creating an example raster object&lt;/h2&gt;
&lt;p&gt;We load both libraries.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressWarnings(library(landscapeR)) 
suppressWarnings(library(raster))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We create an empty raster:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;m &amp;lt;- matrix(0, 50, 50)
r &amp;lt;- raster(m, xmn=0, xmx=10, ymn=0, ymx=10)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we create a landscape class using &lt;code&gt;landscapeR::makeClass&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;r2 &amp;lt;- makeClass(context=r, npatch=10, size=100, val=1, bgr=0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we add more classes and a background:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;r2 &amp;lt;- makeClass(context=r2, npatch=5, size=100, val=2, bgr=0)
r2 &amp;lt;- makeClass(context=r2, npatch=3, size=100, val=3, bgr=0)
r2 &amp;lt;- makeClass(context=r2, npatch=10, size=50, val=4, bgr=0)
r &amp;lt;- makeClass(context=r2, npatch=1, size=250, bgr=c(0:4), val=5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have generated the following raster object:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(r, legend=T)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If we were (and we are!) to use non-default colors to plot a beautiful map, the amazing &lt;code&gt;R&lt;/code&gt; package &lt;code&gt;fishualise&lt;/code&gt; is what we need. &lt;code&gt;fishualise&lt;/code&gt; provides beautiful color palettes derived from selected fish species. Let’s use the palette associated to &lt;em&gt;Callanthias australis&lt;/em&gt;, a splendid perch from Australia (fam. Callanthiidae).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressWarnings(library(fishualize))
pal &amp;lt;- fish(length(unique(r[])), option = &amp;quot;Callanthias_australis&amp;quot;)
plot(r, col=pal, legend=T)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now we have our example raster. Let’s go through several useful operations using the package &lt;code&gt;raster&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;changing-the-resolution-rasteraggregate&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Changing the resolution &lt;code&gt;raster::aggregate&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The resolution is the size of the pixels forming the raster layer. It is also called the grain. It is possible to aggregate pixels to build larger entities. This amounts to decrease the resolution or increase the grain. The important thing is the rule used to aggregate pixels. We can take the mean of the aggregated pixels as well as other values such as the minimum value, the maximum, or any other value. We just need to make sure of the meaning of such value. For example, qualitative variables coded as number may lead to meaningless values when aggregated…&lt;/p&gt;
&lt;p&gt;We take the mean.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ra &amp;lt;- aggregate(r, fact=4, fun=mean)
plot(ra, col=pal, legend=T)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We take the minimum.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ra &amp;lt;- aggregate(r, fact=4, fun=min)
plot(ra, col=pal, legend=T)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We take the maximum.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ra &amp;lt;- aggregate(r, fact=4, fun=max)
plot(ra, col=pal, legend=T)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Resulting maps are very different...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;cropping-a-subset-of-a-raster-object&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Cropping a subset of a raster object&lt;/h2&gt;
&lt;p&gt;A subset of a raster can easily be extracted. This operation can be done using &lt;code&gt;raster::crop&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;e &amp;lt;- extent(c(xmin=2, xmax=6, ymin=3, ymax=5))
rc &amp;lt;- crop(x=r, y=e)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That’s it!&lt;/p&gt;
&lt;p&gt;We plot the original raster and add a rectangle to show the subset we crop :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(r, main=&amp;quot;the original raster&amp;quot;, col=pal, legend=T)
rect(xleft=2, ybottom=3, xright=6, ytop=5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And we plot the subset :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(rc, main = &amp;quot;the subset&amp;quot;, col=pal, legend=T)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;changing-raster-values&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Changing raster values&lt;/h2&gt;
&lt;p&gt;We can reclassy the raster values using the function &lt;code&gt;raster::reclassify&lt;/code&gt; or directly modify certain values.&lt;/p&gt;
&lt;div id=&#34;reclassify&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reclassify&lt;/h3&gt;
&lt;p&gt;This function changes the values for all the cells across the raster. Here’s an example:&lt;/p&gt;
&lt;p&gt;The values in &lt;code&gt;r&lt;/code&gt; are 0, 1, 2, 3, 4, 5&lt;/p&gt;
&lt;p&gt;Let’s say we reclassify these values into three groups: 0, 0-2 and 2-5.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unique(r)
## [1] 0 1 2 3 4 5

# reclassify the values into three groups 
# all values = 0 stay 0
# all values &amp;gt; 0 and &amp;lt;= 2 become 1
# all values &amp;gt; 2 and &amp;lt;= 5 become 2

rc &amp;lt;- reclassify(r, c(-Inf,0,0, 0,2,1, 2,Inf,2), include.lowest=T)

plot(rc, main=&amp;quot;the reclassified raster&amp;quot;, col=fish(length(unique(rc[])), option = &amp;quot;Callanthias_australis&amp;quot;), legend=T) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(r, main=&amp;quot;the original raster&amp;quot;, col=fish(length(unique(r[])), option = &amp;quot;Callanthias_australis&amp;quot;), legend=T) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-13-2.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;direct-change&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Direct change&lt;/h3&gt;
&lt;p&gt;The values associated to certain pixels can be directly changed. For instance, all values larger than 1 are changed to 10 :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rc[which(rc[]&amp;gt;1)] &amp;lt;- 10
plot(rc, main=&amp;quot;modified raster&amp;quot;, col=fish(length(unique(r[])), option = &amp;quot;Callanthias_australis&amp;quot;), legend=T) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Changing the value associated to a given cell can be done using :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rc &amp;lt;- r ; rc[125:235] &amp;lt;- 12
plot(rc, main=&amp;quot;modified raster&amp;quot;, col=fish(length(unique(r[])), option = &amp;quot;Callanthias_australis&amp;quot;), legend=T) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;combining-rasters&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Combining rasters&lt;/h2&gt;
&lt;p&gt;Different rasters can easily be merged using the function &lt;code&gt;raster::merge&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Let’s crop 2 subsets of our raster &lt;code&gt;r&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;e &amp;lt;- extent(c(xmin=2, xmax=5, ymin=2, ymax=4))
r1 &amp;lt;- crop(x=r, y=e)

e &amp;lt;- extent(c(xmin=7, xmax=9, ymin=6, ymax=9))
r2 &amp;lt;- crop(x=r, y=e)

plot(r1, legend=T, col=fish(length(unique(r[])), option = &amp;quot;Callanthias_australis&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(r2, legend=T, col=fish(length(unique(r[])), option = &amp;quot;Callanthias_australis&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-16-2.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rm &amp;lt;- merge(r1, r2)
plot(rm, legend=T, col=fish(length(unique(r[])), option = &amp;quot;Callanthias_australis&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-Rlandscape01_files/figure-html/unnamed-chunk-16-3.png&#34; width=&#34;400&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Robert J. Hijmans (2019). raster: Geographic Data Analysis and Modeling. R package version 2.9-23. &lt;a href=&#34;https://CRAN.R-project.org/package=raster&#34; class=&#34;uri&#34;&gt;https://CRAN.R-project.org/package=raster&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dario Masante (2017). landscapeR: Categorical Landscape Simulation Facility. R package version 1.2. &lt;a href=&#34;https://CRAN.R-project.org/package=landscapeR&#34; class=&#34;uri&#34;&gt;https://CRAN.R-project.org/package=landscapeR&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Quels packages R installer avant l&#39;école chercheur &#39;Paysage et santé des plantes&#39; ?</title>
      <link>/2019/08/29/installecp2complement/</link>
      <pubDate>Thu, 29 Aug 2019 21:14:14 -0500</pubDate>
      <guid>/2019/08/29/installecp2complement/</guid>
      <description>


&lt;p&gt;Vous allez participer à l’école chercheur &lt;a href=&#34;http://jobs.inra.fr/Evenements/Ecole-chercheurs-paysage&#34;&gt;“Paysage et santé des plantes : Analyser, comprendre et modéliser les processus écologiques en jeu”&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Il est fortement conseillé de mettre à jour le logiciel R pour disposer de la &lt;a href=&#34;https://www.r-project.org/&#34;&gt;version 3.6.1 (Action of the Toes)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nous vous conseillons également d’installer ou de mettre à jour les packages R suivants :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ade4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ape&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;briskaR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dismo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;caret&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FeedbackTS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gbm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geoR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ggplot2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gstat&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;landscapemetrics&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;landscapeR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;landsepi&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MetaLandSim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NLMR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maptools&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mvtnorm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plspm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RandomFields&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;raster&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rgdal&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SDMTools&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;splancs&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Il est également nécessaire d’installer le package &lt;code&gt;ecpaysage2&lt;/code&gt; développé pour l’école. Ceci est expliqué dans un &lt;a href=&#34;/2019/08/29/installecp2/&#34;&gt;précédent billet&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installer le package R ecpaysage2</title>
      <link>/2019/08/29/installecp2/</link>
      <pubDate>Thu, 29 Aug 2019 21:13:14 -0500</pubDate>
      <guid>/2019/08/29/installecp2/</guid>
      <description>


&lt;p&gt;Le package &lt;code&gt;ecpaysage2&lt;/code&gt; a été développé spécialement pour l’école chercheur intitulée &lt;a href=&#34;http://jobs.inra.fr/Evenements/Ecole-chercheurs-paysage&#34;&gt;“Paysage et santé des plantes : Analyser, comprendre et modéliser les processus écologiques en jeu”&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Le package contient des données qui seront utilisées durant l’école ainsi qu’une vignette fournissant des informations utiles.&lt;/p&gt;
&lt;p&gt;Ce billet explique comment installer le package à partir du site &lt;a href=&#34;https://r-forge.r-project.org/&#34;&gt;R-Forge&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dans la console R tapez :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;ecpaysage2&amp;quot;, repos=&amp;quot;http://R-Forge.R-project.org&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Après avoir chargé &lt;code&gt;ecpaysage2&lt;/code&gt; vous aurez accès à la vignette en tapant :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ecpaysage2)
vignette(package=&amp;quot;ecpaysage2&amp;quot;)
vignette(&amp;#39;ecpaysage2_intro&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
